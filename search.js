window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "mozilla_schema_generator", "modulename": "mozilla_schema_generator", "kind": "module", "doc": "<p>Generate schemas for mozilla-pipeline-schemas.</p>\n\n<p><a href=\"https://circleci.com/gh/mozilla/mozilla-schema-generator/tree/main\"><img src=\"https://circleci.com/gh/mozilla/mozilla-schema-generator/tree/main.svg?style=svg\" alt=\"CircleCI\" /></a>\n<a href=\"https://pypi.python.org/pypi/mozilla-schema-generator/\"><img src=\"https://img.shields.io/pypi/v/mozilla-schema-generator.svg\" alt=\"Latest Version\" /></a></p>\n\n<h1 id=\"mozilla-schema-generator\">Mozilla Schema Generator</h1>\n\n<p>A library for generating full representations of Mozilla telemetry pings.</p>\n\n<p>See <a href=\"https://www.github.com/mozilla-services/mozilla-pipeline-schemas\">Mozilla Pipeline Schemas</a>\nfor the more generic structure of pings. This library takes those generic structures and fills in\nall of the probes we expect to see in the appropriate places.</p>\n\n<h2 id=\"telemetry-integration\">Telemetry Integration</h2>\n\n<p>There are two generic ping types we're targeting for this library:</p>\n\n<ol>\n<li><a href=\"http://gecko-docs.mozilla.org.s3.amazonaws.com/toolkit/components/telemetry/telemetry/data/main-ping.html\">The Common Ping Format</a>\nis used for many legacy pings from Firefox Desktop ping, including the \"main\" ping</li>\n<li><a href=\"https://github.com/mozilla/glean_parser\">The Glean Ping Format</a> is the common structure being used for\nall newly instrumented products at Mozilla, including mobile browsers.</li>\n</ol>\n\n<p>This library takes the information for what should be in those pings from the <a href=\"https://www.github.com/mozilla/probe-scraper\">Probe Info Service</a>.</p>\n\n<h2 id=\"data-store-integration\">Data Store Integration</h2>\n\n<p>The primary use of the schemas is for integration with the\n<a href=\"https://www.github.com/mozilla/jsonschema-transpiler\">Schema Transpiler</a>.\nThe schemas that this repository generates can be transpiled into Avro and Bigquery. They define\nthe schema of the Avro and BigQuery tables that the <a href=\"https://www.github.com/mozilla/gcp-ingestion\">BQ Sink</a>\nwrites to.</p>\n\n<h2 id=\"validation\">Validation</h2>\n\n<p>When we validate pings against a schema in the data pipeline, we use the generic versions\nrather than the versions generated by this repository's machinery. While the schemas produced\nhere are guaranteed to be more correct since they include explicit definitions of every metric and probe,\nwe find in practice there are too many edge cases where a probe is sent with the incorrect type\nand we need to coerce it to the correct type when loading to BigQuery.\nWe also purposely represent some complex types as JSON strings in schemas, relying on the BQ loader\nto coerce objects to string.\nWe could still consider using the generated schemas for validation in the future, but\nadditional work would be required to ensure it does not lead to mass rejection of pings.</p>\n\n<h2 id=\"usage\">Usage</h2>\n\n<h3 id=\"main-ping\">Main Ping</h3>\n\n<p>Generate the Full Main Ping schema:</p>\n\n<pre><code>mozilla-schema-generator generate-main-ping\n</code></pre>\n\n<p>The <code>out-dir</code> parameter will be the namespace for the pings.</p>\n\n<p>To see a full list of options, run <code>mozilla-schema-generator generate-main-ping --help</code>.</p>\n\n<h3 id=\"glean\">Glean</h3>\n\n<p>Generate all Glean ping schemas - one for each application, for each ping\nthat application sends:</p>\n\n<pre><code>mozilla-schema-generator generate-glean-pings\n</code></pre>\n\n<p>Write schemas to a directory:</p>\n\n<pre><code>mozilla-schema-generator generate-glean-pings --out-dir glean-ping\n</code></pre>\n\n<p>To see a full list of options, run <code>mozilla-schema-generator generate-glean-pings --help</code>.</p>\n\n<h2 id=\"configuration-files\">Configuration Files</h2>\n\n<p>Configuration files are by default found in <code>/config</code>. You can also specify your own when running the generator.</p>\n\n<p>Configuration files match certain parts of a ping to certain types of probes or metrics. The nesting\nof the config file matches the ping it is filling in. For example, Glean stores probe types under\nthe <code>metrics</code> key, so the nesting looks like this:</p>\n\n<pre><code>{\n    \"metrics\": {\n        \"string\": {\n            &lt;METRIC_ID&gt;: {...}\n        }\n    }\n}\n</code></pre>\n\n<p>While the generic schema doesn't include information about the specific <code>&lt;METRIC_ID&gt;</code>s being included,\nthe schema-generator does. To include the correct metrics that we would find in that section of the ping,\nwe would organize the <code>config.yaml</code> file like this:</p>\n\n<pre><code>metrics:\n    string:\n        match:\n            type: string\n</code></pre>\n\n<p>The <code>match</code> key indicates that we should fill-in this section of the ping schema with metrics,\nand the <code>type: string</code> makes sure we only put string metrics in there. You can do an exact\nmatch on any field available in the ping info from the <a href=\"https://probeinfo.telemetry.mozilla.org/glean/glean/metrics\">probe-info-service</a>,\nwhich also contains the <a href=\"https://probeinfo.telemetry.mozilla.org/firefox/all/main/all_probes\">Desktop probes</a>.</p>\n\n<p>There are a few additional keywords allowable under any field:</p>\n\n<ul>\n<li><code>contains</code> - e.g. <code>process: contains: main</code>, indicates that the <code>process</code> field is an array\nand it should only match those that include the entry <code>main</code>.</li>\n<li><code>not</code> - e.g. <code>send_in_pings: not: glean_ping_info</code>, indicates that we should match\nany field for <code>send_in_pings</code> _except_ <code>glean_ping_info</code>.</li>\n</ul>\n\n<h3 id=\"table_group-key\"><code>table_group</code> Key</h3>\n\n<p>This specific field is for indicating which table group that section of the ping should be included in when\nsplitting the schema. Currently we do not split any pings. See the section on <a href=\"#bigquery-limitations-and-splitting\">BigQuery\nLimitations and Splitting</a> for more info.</p>\n\n<h2 id=\"allowing-schema-incompatible-changes\">Allowing schema incompatible changes</h2>\n\n<p>On every run of the schema generator, there is a check for incompatible changes\nbetween the previous revision and current generated revision. A schema\nincompatible change includes a removal of a schema or a column, or a change in\nthe type definition of a column.</p>\n\n<p>There are two methods to get around these restrictions. If you are actively\ndeveloping the schema generator and need to introduce a schema incompatible\nchange, set <code>MPS_VALIDATE_BQ=false</code>.</p>\n\n<p>If a schema incompatible change needs to be introduced in production (i.e.\n<code>generated-schemas</code>), then modify the <code>incompatibility-allowlist</code> at the root of\nthe repository. Add documents in the form of\n<code>{namespace}.{doctype}.{docversion}</code>. Globs are allowed. For example, add the\nfollowing line to allow remove schemas under the <code>my_glean_app</code> namespace:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>my_glean_app.*\n</code></pre>\n</div>\n\n<p>Once the commit has gone through successfully, this line should be removed from\nthe document.</p>\n\n<h2 id=\"development-and-testing\">Development and Testing</h2>\n\n<p>Install requirements:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make<span class=\"w\"> </span>install-requirements\n</code></pre>\n</div>\n\n<p>Ensure that the mozilla-pipeline-schemas submodule has been checked out:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>git<span class=\"w\"> </span>submodule<span class=\"w\"> </span>init\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--remote\n</code></pre>\n</div>\n\n<p>Run tests:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make<span class=\"w\"> </span><span class=\"nb\">test</span>\n</code></pre>\n</div>\n\n<p>Publish generated schemas to <a href=\"https://github.com/mozilla-services/mozilla-pipeline-schemas/tree/test-generated-schemas\">mozilla-generated-schemas/test-generated-schemas</a>\nrun:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>git<span class=\"w\"> </span>fetch<span class=\"w\"> </span>origin\n\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>&lt;branch-to-test&gt;\n\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">MPS_SSH_KEY_BASE64</span><span class=\"o\">=</span><span class=\"k\">$(</span>cat<span class=\"w\"> </span>~/.ssh/id_rsa<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>base64<span class=\"k\">)</span>\n\n<span class=\"c1\"># generate all schemas for current main</span>\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>main<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>git<span class=\"w\"> </span>pull<span class=\"w\"> </span>make<span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>make<span class=\"w\"> </span>run\n\n<span class=\"c1\"># generate all schemas with changes and compare with main</span>\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>&lt;branch-to-test&gt;<span class=\"w\"> </span>make<span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>make<span class=\"w\"> </span>run\n</code></pre>\n</div>\n"}, {"fullname": "mozilla_schema_generator.bhr_ping", "modulename": "mozilla_schema_generator.bhr_ping", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.bhr_ping.BhrPing", "modulename": "mozilla_schema_generator.bhr_ping", "qualname": "BhrPing", "kind": "class", "doc": "<p></p>\n", "bases": "mozilla_schema_generator.common_ping.CommonPing"}, {"fullname": "mozilla_schema_generator.bhr_ping.BhrPing.__init__", "modulename": "mozilla_schema_generator.bhr_ping", "qualname": "BhrPing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.bhr_ping.BhrPing.schema_url", "modulename": "mozilla_schema_generator.bhr_ping", "qualname": "BhrPing.schema_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/{branch}/schemas/telemetry/bhr/bhr.4.schema.json&#x27;"}, {"fullname": "mozilla_schema_generator.common_ping", "modulename": "mozilla_schema_generator.common_ping", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing", "kind": "class", "doc": "<p></p>\n", "bases": "mozilla_schema_generator.generic_ping.GenericPing"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.__init__", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">schema_url</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.MIN_FX_VERSION", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.MIN_FX_VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.env_url", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.env_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/{branch}/templates/include/telemetry/environment.1.schema.json&#x27;"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.probes_url", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.probes_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org/firefox/all/main/all_probes&#x27;"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.get_schema", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.get_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.get_env", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.get_env", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.common_ping.CommonPing.get_probes", "modulename": "mozilla_schema_generator.common_ping", "qualname": "CommonPing.get_probes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">MainProbe</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.config", "modulename": "mozilla_schema_generator.config", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.config.Config", "modulename": "mozilla_schema_generator.config", "qualname": "Config", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.config.Config.__init__", "modulename": "mozilla_schema_generator.config", "qualname": "Config.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.config.Config.match_key", "modulename": "mozilla_schema_generator.config", "qualname": "Config.match_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;match&#x27;"}, {"fullname": "mozilla_schema_generator.config.Config.name", "modulename": "mozilla_schema_generator.config", "qualname": "Config.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.config.Config.get_match_keys", "modulename": "mozilla_schema_generator.config", "qualname": "Config.get_match_keys", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.config.Config.get_schema_elements", "modulename": "mozilla_schema_generator.config", "qualname": "Config.get_schema_elements", "kind": "function", "doc": "<p>Given a schema and set of probes, get a list of probe and\nthe location in the schema where those probes should be\ninputted.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">probes</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">Probe</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">Probe</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.generic_ping", "modulename": "mozilla_schema_generator.generic_ping", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.logger", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger mozilla_schema_generator.generic_ping (WARNING)&gt;"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.__init__", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">schema_url</span>, </span><span class=\"param\"><span class=\"n\">env_url</span>, </span><span class=\"param\"><span class=\"n\">probes_url</span>, </span><span class=\"param\"><span class=\"n\">mps_branch</span><span class=\"o\">=</span><span class=\"s1\">&#39;main&#39;</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.probe_info_base_url", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.probe_info_base_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org&#x27;"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.default_encoding", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.default_encoding", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;utf-8&#x27;"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.default_max_size", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.default_max_size", "kind": "variable", "doc": "<p></p>\n", "default_value": "12900"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.cache_dir", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.cache_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;.probe_cache&#x27;)"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.branch_name", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.branch_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.schema_url", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.schema_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.env_url", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.env_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.probes_url", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.probes_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.get_schema", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.get_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.get_env", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.get_env", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.get_probes", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.get_probes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">Probe</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.generate_schema", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.generate_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.generic_ping.GenericPing.make_schema", "modulename": "mozilla_schema_generator.generic_ping", "qualname": "GenericPing.make_schema", "kind": "function", "doc": "<p>Fill in probes based on the config, and keep only the env\nparts of the schema. Throw away everything else.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>,</span><span class=\"param\">\t<span class=\"n\">probes</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">Probe</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping", "modulename": "mozilla_schema_generator.glean_ping", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.glean_ping.ROOT_DIR", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "ROOT_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/home/circleci/project/mozilla_schema_generator&#x27;)"}, {"fullname": "mozilla_schema_generator.glean_ping.BUG_1737656_TXT", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "BUG_1737656_TXT", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/home/circleci/project/mozilla_schema_generator/configs/bug_1737656_affected.txt&#x27;)"}, {"fullname": "mozilla_schema_generator.glean_ping.logger", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger mozilla_schema_generator.glean_ping (WARNING)&gt;"}, {"fullname": "mozilla_schema_generator.glean_ping.DEFAULT_SCHEMA_URL", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "DEFAULT_SCHEMA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/{branch}/schemas/glean/glean/glean.1.schema.json&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.MINIMUM_SCHEMA_URL", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "MINIMUM_SCHEMA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/{branch}/schemas/glean/glean/glean-min.1.schema.json&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing", "kind": "class", "doc": "<p></p>\n", "bases": "mozilla_schema_generator.generic_ping.GenericPing"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.__init__", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">repo</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.probes_url_template", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.probes_url_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org/glean/{}/metrics&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.ping_url_template", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.ping_url_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org/glean/{}/pings&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.repos_url", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.repos_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org/glean/repositories&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.dependencies_url_template", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.dependencies_url_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://probeinfo.telemetry.mozilla.org/glean/{}/dependencies&#x27;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.default_dependencies", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.default_dependencies", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;glean-core&#x27;]"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.repo", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.repo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.repo_name", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.repo_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.app_id", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.app_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_schema", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_schema", "kind": "function", "doc": "<p>Fetch schema via URL.</p>\n\n<p>Unless <em>generic_schema</em> is set to true, this function makes some modifications\nto allow some workarounds for proper injection of metrics.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">generic_schema</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_dependencies", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_dependencies", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_probes", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_probes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">GleanProbe</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_pings", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_pings", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.apply_default_metadata", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.apply_default_metadata", "kind": "function", "doc": "<p>apply_default_metadata recurses down into dicts nested\nto an arbitrary depth, updating keys. The <code>default_metadata</code> is merged into\n<code>ping_metadata</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ping_metadata</strong>:  dict onto which the merge is executed</li>\n<li><strong>default_metadata</strong>:  dct merged into ping_metadata</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ping_metadata</span>, </span><span class=\"param\"><span class=\"n\">default_metadata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.reorder_metadata", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.reorder_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">metadata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_pings_and_pipeline_metadata", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_pings_and_pipeline_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_ping_descriptions", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_ping_descriptions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.set_schema_url", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.set_schema_url", "kind": "function", "doc": "<p>Switch between the glean-min and glean schemas if the ping does not require\ninfo sections as specified in the parsed ping info in probe scraper.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">metadata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.generate_schema", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.generate_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">config</span>,</span><span class=\"param\">\t<span class=\"n\">generic_schema</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.get_repos", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.get_repos", "kind": "function", "doc": "<p>Retrieve metadata for all non-library Glean repositories</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.f", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.f", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;_io.TextIOWrapper name=&#x27;/home/circleci/project/mozilla_schema_generator/configs/bug_1737656_affected.txt&#x27; mode=&#x27;r&#x27; encoding=&#x27;UTF-8&#x27;&gt;"}, {"fullname": "mozilla_schema_generator.glean_ping.GleanPing.bug_1737656_affected_tables", "modulename": "mozilla_schema_generator.glean_ping", "qualname": "GleanPing.bug_1737656_affected_tables", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;burnham.baseline_v1&#x27;, &#x27;burnham.deletion_request_v1&#x27;, &#x27;burnham.discovery_v1&#x27;, &#x27;burnham.events_v1&#x27;, &#x27;burnham.metrics_v1&#x27;, &#x27;burnham.space_ship_ready_v1&#x27;, &#x27;burnham.starbase46_v1&#x27;, &#x27;firefox_desktop_background_update.background_update_v1&#x27;, &#x27;firefox_desktop_background_update.baseline_v1&#x27;, &#x27;firefox_desktop_background_update.deletion_request_v1&#x27;, &#x27;firefox_desktop_background_update.events_v1&#x27;, &#x27;firefox_desktop_background_update.metrics_v1&#x27;, &#x27;firefox_desktop.baseline_v1&#x27;, &#x27;firefox_desktop.deletion_request_v1&#x27;, &#x27;firefox_desktop.events_v1&#x27;, &#x27;firefox_desktop.fog_validation_v1&#x27;, &#x27;firefox_desktop.metrics_v1&#x27;, &#x27;firefox_installer.install_v1&#x27;, &#x27;firefox_launcher_process.launcher_process_failure_v1&#x27;, &#x27;messaging_system.cfr_v1&#x27;, &#x27;messaging_system.infobar_v1&#x27;, &#x27;messaging_system.moments_v1&#x27;, &#x27;messaging_system.onboarding_v1&#x27;, &#x27;messaging_system.personalization_experiment_v1&#x27;, &#x27;messaging_system.snippets_v1&#x27;, &#x27;messaging_system.spotlight_v1&#x27;, &#x27;messaging_system.undesired_events_v1&#x27;, &#x27;messaging_system.whats_new_panel_v1&#x27;, &#x27;mlhackweek_search.action_v1&#x27;, &#x27;mlhackweek_search.baseline_v1&#x27;, &#x27;mlhackweek_search.custom_v1&#x27;, &#x27;mlhackweek_search.deletion_request_v1&#x27;, &#x27;mlhackweek_search.events_v1&#x27;, &#x27;mlhackweek_search.metrics_v1&#x27;, &#x27;mozilla_lockbox.addresses_sync_v1&#x27;, &#x27;mozilla_lockbox.baseline_v1&#x27;, &#x27;mozilla_lockbox.bookmarks_sync_v1&#x27;, &#x27;mozilla_lockbox.creditcards_sync_v1&#x27;, &#x27;mozilla_lockbox.deletion_request_v1&#x27;, &#x27;mozilla_lockbox.events_v1&#x27;, &#x27;mozilla_lockbox.history_sync_v1&#x27;, &#x27;mozilla_lockbox.logins_sync_v1&#x27;, &#x27;mozilla_lockbox.metrics_v1&#x27;, &#x27;mozilla_lockbox.sync_v1&#x27;, &#x27;mozilla_lockbox.tabs_sync_v1&#x27;, &#x27;mozilla_mach.baseline_v1&#x27;, &#x27;mozilla_mach.deletion_request_v1&#x27;, &#x27;mozilla_mach.events_v1&#x27;, &#x27;mozilla_mach.metrics_v1&#x27;, &#x27;mozilla_mach.usage_v1&#x27;, &#x27;mozillavpn.deletion_request_v1&#x27;, &#x27;mozillavpn.main_v1&#x27;, &#x27;mozphab.baseline_v1&#x27;, &#x27;mozphab.deletion_request_v1&#x27;, &#x27;mozphab.events_v1&#x27;, &#x27;mozphab.metrics_v1&#x27;, &#x27;mozphab.usage_v1&#x27;, &#x27;org_mozilla_bergamot.custom_v1&#x27;, &#x27;org_mozilla_bergamot.deletion_request_v1&#x27;, &#x27;org_mozilla_connect_firefox.baseline_v1&#x27;, &#x27;org_mozilla_connect_firefox.deletion_request_v1&#x27;, &#x27;org_mozilla_connect_firefox.events_v1&#x27;, &#x27;org_mozilla_connect_firefox.metrics_v1&#x27;, &#x27;org_mozilla_fenix.activation_v1&#x27;, &#x27;org_mozilla_fenix.addresses_sync_v1&#x27;, &#x27;org_mozilla_fenix.baseline_v1&#x27;, &#x27;org_mozilla_fenix.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_fenix.creditcards_sync_v1&#x27;, &#x27;org_mozilla_fenix.deletion_request_v1&#x27;, &#x27;org_mozilla_fenix.events_v1&#x27;, &#x27;org_mozilla_fenix.first_session_v1&#x27;, &#x27;org_mozilla_fenix.fog_validation_v1&#x27;, &#x27;org_mozilla_fenix.history_sync_v1&#x27;, &#x27;org_mozilla_fenix.installation_v1&#x27;, &#x27;org_mozilla_fenix.logins_sync_v1&#x27;, &#x27;org_mozilla_fenix.metrics_v1&#x27;, &#x27;org_mozilla_fenix.migration_v1&#x27;, &#x27;org_mozilla_fenix.startup_timeline_v1&#x27;, &#x27;org_mozilla_fenix.sync_v1&#x27;, &#x27;org_mozilla_fenix.tabs_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.activation_v1&#x27;, &#x27;org_mozilla_fenix_nightly.addresses_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.baseline_v1&#x27;, &#x27;org_mozilla_fenix_nightly.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.creditcards_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.deletion_request_v1&#x27;, &#x27;org_mozilla_fenix_nightly.events_v1&#x27;, &#x27;org_mozilla_fenix_nightly.first_session_v1&#x27;, &#x27;org_mozilla_fenix_nightly.fog_validation_v1&#x27;, &#x27;org_mozilla_fenix_nightly.history_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.installation_v1&#x27;, &#x27;org_mozilla_fenix_nightly.logins_sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.metrics_v1&#x27;, &#x27;org_mozilla_fenix_nightly.migration_v1&#x27;, &#x27;org_mozilla_fenix_nightly.startup_timeline_v1&#x27;, &#x27;org_mozilla_fenix_nightly.sync_v1&#x27;, &#x27;org_mozilla_fenix_nightly.tabs_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.activation_v1&#x27;, &#x27;org_mozilla_fennec_aurora.addresses_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.baseline_v1&#x27;, &#x27;org_mozilla_fennec_aurora.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.creditcards_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.deletion_request_v1&#x27;, &#x27;org_mozilla_fennec_aurora.events_v1&#x27;, &#x27;org_mozilla_fennec_aurora.first_session_v1&#x27;, &#x27;org_mozilla_fennec_aurora.fog_validation_v1&#x27;, &#x27;org_mozilla_fennec_aurora.history_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.installation_v1&#x27;, &#x27;org_mozilla_fennec_aurora.logins_sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.metrics_v1&#x27;, &#x27;org_mozilla_fennec_aurora.migration_v1&#x27;, &#x27;org_mozilla_fennec_aurora.startup_timeline_v1&#x27;, &#x27;org_mozilla_fennec_aurora.sync_v1&#x27;, &#x27;org_mozilla_fennec_aurora.tabs_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.activation_v1&#x27;, &#x27;org_mozilla_firefox_beta.addresses_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.baseline_v1&#x27;, &#x27;org_mozilla_firefox_beta.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.creditcards_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.deletion_request_v1&#x27;, &#x27;org_mozilla_firefox_beta.events_v1&#x27;, &#x27;org_mozilla_firefox_beta.first_session_v1&#x27;, &#x27;org_mozilla_firefox_beta.fog_validation_v1&#x27;, &#x27;org_mozilla_firefox_beta.history_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.installation_v1&#x27;, &#x27;org_mozilla_firefox_beta.logins_sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.metrics_v1&#x27;, &#x27;org_mozilla_firefox_beta.migration_v1&#x27;, &#x27;org_mozilla_firefox_beta.startup_timeline_v1&#x27;, &#x27;org_mozilla_firefox_beta.sync_v1&#x27;, &#x27;org_mozilla_firefox_beta.tabs_sync_v1&#x27;, &#x27;org_mozilla_firefox.activation_v1&#x27;, &#x27;org_mozilla_firefox.addresses_sync_v1&#x27;, &#x27;org_mozilla_firefox.baseline_v1&#x27;, &#x27;org_mozilla_firefox.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_firefox.creditcards_sync_v1&#x27;, &#x27;org_mozilla_firefox.deletion_request_v1&#x27;, &#x27;org_mozilla_firefox.events_v1&#x27;, &#x27;org_mozilla_firefox.first_session_v1&#x27;, &#x27;org_mozilla_firefox.fog_validation_v1&#x27;, &#x27;org_mozilla_firefox.history_sync_v1&#x27;, &#x27;org_mozilla_firefox.installation_v1&#x27;, &#x27;org_mozilla_firefox.logins_sync_v1&#x27;, &#x27;org_mozilla_firefox.metrics_v1&#x27;, &#x27;org_mozilla_firefox.migration_v1&#x27;, &#x27;org_mozilla_firefox.startup_timeline_v1&#x27;, &#x27;org_mozilla_firefox.sync_v1&#x27;, &#x27;org_mozilla_firefox.tabs_sync_v1&#x27;, &#x27;org_mozilla_firefoxreality.baseline_v1&#x27;, &#x27;org_mozilla_firefoxreality.deletion_request_v1&#x27;, &#x27;org_mozilla_firefoxreality.events_v1&#x27;, &#x27;org_mozilla_firefoxreality.launch_v1&#x27;, &#x27;org_mozilla_firefoxreality.metrics_v1&#x27;, &#x27;org_mozilla_focus_beta.activation_v1&#x27;, &#x27;org_mozilla_focus_beta.baseline_v1&#x27;, &#x27;org_mozilla_focus_beta.deletion_request_v1&#x27;, &#x27;org_mozilla_focus_beta.events_v1&#x27;, &#x27;org_mozilla_focus_beta.metrics_v1&#x27;, &#x27;org_mozilla_focus.activation_v1&#x27;, &#x27;org_mozilla_focus.baseline_v1&#x27;, &#x27;org_mozilla_focus.deletion_request_v1&#x27;, &#x27;org_mozilla_focus.events_v1&#x27;, &#x27;org_mozilla_focus.metrics_v1&#x27;, &#x27;org_mozilla_focus_nightly.activation_v1&#x27;, &#x27;org_mozilla_focus_nightly.baseline_v1&#x27;, &#x27;org_mozilla_focus_nightly.deletion_request_v1&#x27;, &#x27;org_mozilla_focus_nightly.events_v1&#x27;, &#x27;org_mozilla_focus_nightly.metrics_v1&#x27;, &#x27;org_mozilla_ios_fennec.baseline_v1&#x27;, &#x27;org_mozilla_ios_fennec.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_fennec.events_v1&#x27;, &#x27;org_mozilla_ios_fennec.metrics_v1&#x27;, &#x27;org_mozilla_ios_firefox.baseline_v1&#x27;, &#x27;org_mozilla_ios_firefox.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_firefox.events_v1&#x27;, &#x27;org_mozilla_ios_firefox.metrics_v1&#x27;, &#x27;org_mozilla_ios_firefoxbeta.baseline_v1&#x27;, &#x27;org_mozilla_ios_firefoxbeta.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_firefoxbeta.events_v1&#x27;, &#x27;org_mozilla_ios_firefoxbeta.metrics_v1&#x27;, &#x27;org_mozilla_ios_focus.baseline_v1&#x27;, &#x27;org_mozilla_ios_focus.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_focus.events_v1&#x27;, &#x27;org_mozilla_ios_focus.metrics_v1&#x27;, &#x27;org_mozilla_ios_klar.baseline_v1&#x27;, &#x27;org_mozilla_ios_klar.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_klar.events_v1&#x27;, &#x27;org_mozilla_ios_klar.metrics_v1&#x27;, &#x27;org_mozilla_ios_lockbox.baseline_v1&#x27;, &#x27;org_mozilla_ios_lockbox.deletion_request_v1&#x27;, &#x27;org_mozilla_ios_lockbox.events_v1&#x27;, &#x27;org_mozilla_ios_lockbox.metrics_v1&#x27;, &#x27;org_mozilla_klar.activation_v1&#x27;, &#x27;org_mozilla_klar.baseline_v1&#x27;, &#x27;org_mozilla_klar.deletion_request_v1&#x27;, &#x27;org_mozilla_klar.events_v1&#x27;, &#x27;org_mozilla_klar.metrics_v1&#x27;, &#x27;org_mozilla_mozregression.baseline_v1&#x27;, &#x27;org_mozilla_mozregression.deletion_request_v1&#x27;, &#x27;org_mozilla_mozregression.events_v1&#x27;, &#x27;org_mozilla_mozregression.metrics_v1&#x27;, &#x27;org_mozilla_mozregression.usage_v1&#x27;, &#x27;org_mozilla_reference_browser.baseline_v1&#x27;, &#x27;org_mozilla_reference_browser.deletion_request_v1&#x27;, &#x27;org_mozilla_reference_browser.events_v1&#x27;, &#x27;org_mozilla_reference_browser.metrics_v1&#x27;, &#x27;org_mozilla_tv_firefox.baseline_v1&#x27;, &#x27;org_mozilla_tv_firefox.deletion_request_v1&#x27;, &#x27;org_mozilla_tv_firefox.events_v1&#x27;, &#x27;org_mozilla_tv_firefox.metrics_v1&#x27;, &#x27;org_mozilla_vrbrowser.addresses_sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.baseline_v1&#x27;, &#x27;org_mozilla_vrbrowser.bookmarks_sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.creditcards_sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.deletion_request_v1&#x27;, &#x27;org_mozilla_vrbrowser.events_v1&#x27;, &#x27;org_mozilla_vrbrowser.history_sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.logins_sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.metrics_v1&#x27;, &#x27;org_mozilla_vrbrowser.session_end_v1&#x27;, &#x27;org_mozilla_vrbrowser.sync_v1&#x27;, &#x27;org_mozilla_vrbrowser.tabs_sync_v1&#x27;, &#x27;rally_core.deletion_request_v1&#x27;, &#x27;rally_core.demographics_v1&#x27;, &#x27;rally_core.enrollment_v1&#x27;, &#x27;rally_core.study_enrollment_v1&#x27;, &#x27;rally_core.study_unenrollment_v1&#x27;, &#x27;rally_core.uninstall_deletion_v1&#x27;, &#x27;rally_debug.deletion_request_v1&#x27;, &#x27;rally_debug.demographics_v1&#x27;, &#x27;rally_debug.enrollment_v1&#x27;, &#x27;rally_debug.study_enrollment_v1&#x27;, &#x27;rally_debug.study_unenrollment_v1&#x27;, &#x27;rally_debug.uninstall_deletion_v1&#x27;, &#x27;rally_study_zero_one.deletion_request_v1&#x27;, &#x27;rally_study_zero_one.rs01_event_v1&#x27;, &#x27;rally_study_zero_one.study_enrollment_v1&#x27;, &#x27;rally_zero_one.deletion_request_v1&#x27;, &#x27;rally_zero_one.measurements_v1&#x27;, &#x27;rally_zero_one.pioneer_enrollment_v1&#x27;]"}, {"fullname": "mozilla_schema_generator.main_ping", "modulename": "mozilla_schema_generator.main_ping", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.main_ping.MainPing", "modulename": "mozilla_schema_generator.main_ping", "qualname": "MainPing", "kind": "class", "doc": "<p></p>\n", "bases": "mozilla_schema_generator.common_ping.CommonPing"}, {"fullname": "mozilla_schema_generator.main_ping.MainPing.__init__", "modulename": "mozilla_schema_generator.main_ping", "qualname": "MainPing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.main_ping.MainPing.schema_url", "modulename": "mozilla_schema_generator.main_ping", "qualname": "MainPing.schema_url", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/{branch}/schemas/telemetry/main/main.4.schema.json&#x27;"}, {"fullname": "mozilla_schema_generator.matcher", "modulename": "mozilla_schema_generator.matcher", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.matcher.Matcher", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.__init__", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.__init__", "kind": "function", "doc": "<p>table_group: required, which table that group belongs in\ntype: optional, the type of the metrics</p>\n\n<p>All other fields are matched as exact matches,\nexcept for <code>contains</code> which checks that that value\nis in the associated array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">match_obj</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">table_group</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.table_group_key", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.table_group_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;table_group&#x27;"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.type_key", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.type_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;type&#x27;"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.contains_key", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.contains_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;contains&#x27;"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.not_key", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.not_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;not&#x27;"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.any_key", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.any_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;any&#x27;"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.keywords", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.keywords", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;any&#x27;, &#x27;type&#x27;, &#x27;contains&#x27;, &#x27;table_group&#x27;, &#x27;not&#x27;}"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.table_group", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.table_group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.type", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.matcher", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.matcher", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.get_table_group", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.get_table_group", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.matches", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.matches", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">probe</span><span class=\"p\">:</span> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">probes</span><span class=\"o\">.</span><span class=\"n\">Probe</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.matcher.Matcher.clone", "modulename": "mozilla_schema_generator.matcher", "qualname": "Matcher.clone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">new_table_group</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes", "modulename": "mozilla_schema_generator.probes", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.probes.Probe", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.probes.Probe.__init__", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">identifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">definition</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.probes.Probe.type_key", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.type_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;type&#x27;"}, {"fullname": "mozilla_schema_generator.probes.Probe.name_key", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.name_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;name&#x27;"}, {"fullname": "mozilla_schema_generator.probes.Probe.history_key", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.history_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;history&#x27;"}, {"fullname": "mozilla_schema_generator.probes.Probe.in_source_key", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.in_source_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;in-source&#x27;"}, {"fullname": "mozilla_schema_generator.probes.Probe.id", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.probes.Probe.type", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.probes.Probe.name", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_type", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_name", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_description", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_description", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_last_change", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_last_change", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_first_added", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_first_added", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get_schema", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addtlProps</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.Probe.get", "modulename": "mozilla_schema_generator.probes", "qualname": "Probe.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">k</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.MainProbe", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe", "kind": "class", "doc": "<p></p>\n", "bases": "Probe"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.__init__", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">identifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">definition</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.first_added_key", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.first_added_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;first_added&#x27;"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.histogram_schema", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.histogram_schema", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;type&#x27;: &#x27;string&#x27;}"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.parent_processes", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.parent_processes", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;main&#x27;}"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.child_processes", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.child_processes", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;gpu&#x27;, &#x27;dynamic&#x27;, &#x27;content&#x27;, &#x27;socket&#x27;, &#x27;extension&#x27;}"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.processes_map", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.processes_map", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;all_childs&#x27;: {&#x27;gpu&#x27;, &#x27;dynamic&#x27;, &#x27;content&#x27;, &#x27;socket&#x27;, &#x27;extension&#x27;}, &#x27;all_children&#x27;: {&#x27;gpu&#x27;, &#x27;dynamic&#x27;, &#x27;content&#x27;, &#x27;socket&#x27;, &#x27;extension&#x27;}, &#x27;all&#x27;: {&#x27;gpu&#x27;, &#x27;content&#x27;, &#x27;dynamic&#x27;, &#x27;socket&#x27;, &#x27;extension&#x27;, &#x27;main&#x27;}}"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.get_first_added", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.get_first_added", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.get_last_change", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.get_last_change", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.MainProbe.get_schema", "modulename": "mozilla_schema_generator.probes", "qualname": "MainProbe.get_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addtlProps</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe", "kind": "class", "doc": "<p></p>\n", "bases": "Probe"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.__init__", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">identifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">definition</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">pings</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.all_pings_keywords", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.all_pings_keywords", "kind": "variable", "doc": "<p></p>\n", "default_value": "(&#x27;all-pings&#x27;, &#x27;all_pings&#x27;)"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.first_added_key", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.first_added_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;first_added&#x27;"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.is_in_source", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.is_in_source", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.get_first_added", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.get_first_added", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.get_last_change", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.get_last_change", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.probes.GleanProbe.get_schema", "modulename": "mozilla_schema_generator.probes", "qualname": "GleanProbe.get_schema", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addtlProps</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema", "modulename": "mozilla_schema_generator.schema", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.schema.SchemaException", "modulename": "mozilla_schema_generator.schema", "qualname": "SchemaException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "mozilla_schema_generator.schema.SchemaEncoder", "modulename": "mozilla_schema_generator.schema", "qualname": "SchemaEncoder", "kind": "class", "doc": "<p>Extensible JSON <a href=\"http://json.org\">http://json.org</a> encoder for Python data structures.</p>\n\n<p>Supports the following objects and types by default:</p>\n\n<p>+-------------------+---------------+\n| Python            | JSON          |\n+===================+===============+\n| dict              | object        |\n+-------------------+---------------+\n| list, tuple       | array         |\n+-------------------+---------------+\n| str               | string        |\n+-------------------+---------------+\n| int, float        | number        |\n+-------------------+---------------+\n| True              | true          |\n+-------------------+---------------+\n| False             | false         |\n+-------------------+---------------+\n| None              | null          |\n+-------------------+---------------+</p>\n\n<p>To extend this to recognize other objects, subclass and implement a\n<code>.default()</code> method with another method that returns a serializable\nobject for <code>o</code> if possible, otherwise it should call the superclass\nimplementation (to raise <code>TypeError</code>).</p>\n", "bases": "json.encoder.JSONEncoder"}, {"fullname": "mozilla_schema_generator.schema.SchemaEncoder.default", "modulename": "mozilla_schema_generator.schema", "qualname": "SchemaEncoder.default", "kind": "function", "doc": "<p>Implement this method in a subclass such that it returns\na serializable object for <code>o</code>, or calls the base implementation\n(to raise a <code>TypeError</code>).</p>\n\n<p>For example, to support arbitrary iterators, you could\nimplement default like this::</p>\n\n<pre><code>def default(self, o):\n    try:\n        iterable = iter(o)\n    except TypeError:\n        pass\n    else:\n        return list(iterable)\n    # Let the base class default method raise the TypeError\n    return JSONEncoder.default(self, o)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.schema.Schema.__init__", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, {"fullname": "mozilla_schema_generator.schema.Schema.schema", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.schema", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.schema.Schema.set_schema_elem", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.set_schema_elem", "kind": "function", "doc": "<p>@param key: The key set\n@param elem: The value to set the key to\n@param propagate: If True, creates objects until it reaches the full key.\n                  If False, and the parent of the key is not in the\n                  schema, then the key will not be added.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">elem</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">propagate</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema.get", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema.get_size", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.get_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema.clone", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.clone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">mozilla_schema_generator</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Schema</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema.delete_group_from_schema", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.delete_group_from_schema", "kind": "function", "doc": "<p>@param key: The key to remove\n@param propagate: If True, then removes any parents of the deleted key\n                  if they are now empty, i.e. there are no other\n                  <code>properties</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">propagate</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.schema.Schema.property_exists", "modulename": "mozilla_schema_generator.schema", "qualname": "Schema.property_exists", "kind": "function", "doc": "<p>@param key: The key to check for existence</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.subset_pings", "modulename": "mozilla_schema_generator.subset_pings", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.subset_pings.ADDITIONAL_METADATA_FIELDS", "modulename": "mozilla_schema_generator.subset_pings", "qualname": "ADDITIONAL_METADATA_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;client_id&#x27;, &#x27;clientId&#x27;, &#x27;client_info&#x27;]"}, {"fullname": "mozilla_schema_generator.subset_pings.generate", "modulename": "mozilla_schema_generator.subset_pings", "qualname": "generate", "kind": "function", "doc": "<p>Read in pings from disk and split fields into new subset pings.</p>\n\n<p>If configured, also produce a remainder ping with all the fields that weren't moved.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config_data</span>,</span><span class=\"param\">\t<span class=\"n\">out_dir</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.utils", "modulename": "mozilla_schema_generator.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.utils.prepend_properties", "modulename": "mozilla_schema_generator.utils", "qualname": "prepend_properties", "kind": "function", "doc": "<p>Add a \"properties\" before each element of <code>key</code>.\nThis allows the field to be retrieved in a JSON schema</p>\n\n<p>ex:</p>\n\n<pre><code>&gt;&gt; key = (\"hello\", \"world\")\n&gt;&gt; _prepend_propertes(key)\n(\"properties\", \"hello\", \"properties\", \"world)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery", "modulename": "mozilla_schema_generator.validate_bigquery", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "mozilla_schema_generator.validate_bigquery.BASE_DIR", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "BASE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/app&#x27;)"}, {"fullname": "mozilla_schema_generator.validate_bigquery.compute_compact_columns", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "compute_compact_columns", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">document</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery.check_evolution", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "check_evolution", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base</span>, </span><span class=\"param\"><span class=\"n\">head</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery.copy_schemas", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "copy_schemas", "kind": "function", "doc": "<p>Copy BigQuery schemas to a directory as an intermediary step for schema\nevolution checks.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">head</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">repository</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">artifact</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery.checkout_copy_schemas_revisions", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "checkout_copy_schemas_revisions", "kind": "function", "doc": "<p>Checkout two revisions of the schema repository into the artifact\ndirectory. This returns paths to the head and the base directories.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">head</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">repository</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">artifact</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery.parse_incompatibility_allowlist", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "parse_incompatibility_allowlist", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">allowlist</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "mozilla_schema_generator.validate_bigquery.validate", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "validate", "kind": "variable", "doc": "<p>Click command group.</p>\n", "default_value": "&lt;Group validate&gt;"}, {"fullname": "mozilla_schema_generator.validate_bigquery.local_validation", "modulename": "mozilla_schema_generator.validate_bigquery", "qualname": "local_validation", "kind": "variable", "doc": "<p>Validate schemas using a heuristic from the compact schemas.</p>\n", "default_value": "&lt;Command local-validation&gt;"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();